# Generated by Django 5.2.5 on 2025-08-22 06:59

import django.core.validators
import django.db.models.deletion
import easy_thumbnails.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ContactMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("message", models.TextField()),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=200, unique=True)),
                ("short_description", models.CharField(max_length=300)),
                ("body_md", models.TextField()),
                ("body_html", models.TextField(blank=True)),
                ("repo_url", models.URLField(blank=True)),
                ("live_url", models.URLField(blank=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_published", models.BooleanField(default=False)),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["sort_order", "-published_at", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SiteSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("owner_name", models.CharField(default="YOUR NAME", max_length=100)),
                (
                    "tagline",
                    models.CharField(
                        default="Software Engineer & Builder", max_length=200
                    ),
                ),
                ("bio_md", models.TextField(blank=True)),
                ("bio_html", models.TextField(blank=True)),
                (
                    "avatar",
                    easy_thumbnails.fields.ThumbnailerImageField(
                        blank=True,
                        help_text="Profile avatar image",
                        null=True,
                        upload_to="site/",
                    ),
                ),
                (
                    "social_links",
                    models.JSONField(
                        blank=True, default=dict, help_text="Social media links as JSON"
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(default="your.email@example.com", max_length=254),
                ),
                (
                    "analytics_snippet",
                    models.TextField(
                        blank=True, help_text="Google Analytics or other tracking code"
                    ),
                ),
                (
                    "default_meta_description",
                    models.CharField(
                        default="Personal website and portfolio",
                        help_text="Default meta description for pages",
                        max_length=160,
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Site Setting",
                "verbose_name_plural": "Site Settings",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ProjectImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    easy_thumbnails.fields.ThumbnailerImageField(
                        help_text="Project image", upload_to="projects/images/"
                    ),
                ),
                ("caption", models.CharField(blank=True, max_length=200)),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="content.project",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order", "created_at"],
            },
        ),
        migrations.AddField(
            model_name="project",
            name="tags",
            field=models.ManyToManyField(
                blank=True, related_name="projects", to="content.tag"
            ),
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=200, unique=True)),
                ("summary", models.TextField(max_length=500)),
                ("body_md", models.TextField()),
                ("body_html", models.TextField(blank=True)),
                (
                    "hero_image",
                    easy_thumbnails.fields.ThumbnailerImageField(
                        blank=True,
                        help_text="Hero image for the post (1200x600 recommended)",
                        null=True,
                        upload_to="posts/hero/",
                    ),
                ),
                ("is_published", models.BooleanField(default=False)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "reading_time",
                    models.PositiveIntegerField(
                        default=0, help_text="Reading time in minutes"
                    ),
                ),
                (
                    "og_image",
                    models.CharField(
                        blank=True, help_text="OpenGraph image path", max_length=255
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True, help_text="SEO title (max 60 chars)", max_length=60
                    ),
                ),
                (
                    "meta_description",
                    models.CharField(
                        blank=True,
                        help_text="SEO description (max 160 chars)",
                        max_length=160,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="posts",
                        to="content.category",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="posts", to="content.tag"
                    ),
                ),
            ],
            options={
                "ordering": ["-published_at", "-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="project",
            index=models.Index(
                fields=["is_published", "published_at"],
                name="content_pro_is_publ_1371ec_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="project",
            index=models.Index(fields=["slug"], name="content_pro_slug_13c4a7_idx"),
        ),
        migrations.AddIndex(
            model_name="project",
            index=models.Index(
                fields=["sort_order"], name="content_pro_sort_or_5270ed_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["is_published", "published_at"],
                name="content_pos_is_publ_7b5519_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(fields=["slug"], name="content_pos_slug_a791ce_idx"),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["category"], name="content_pos_categor_092e2d_idx"
            ),
        ),
    ]
